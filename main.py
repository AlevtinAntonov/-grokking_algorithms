# Очередь — это абстрактный тип данных, который реализует понятие "первым пришел,
# первым вышел" (FIFO, First-In-First-Out).
# Элементы добавляются в конец очереди, и извлекаются только с начала.
#
# Очередь часто используется в системах, где требуется обрабатывать элементы в порядке их поступления,
# например, в очереди задач на выполнение в операционной системе.
#
# Для очереди необходимо реализовать следующие операции:
#
# enqueue (добавление элемента в очередь) - добавляет элемент в конец очереди.
# dequeue (удаление элемента из очереди) - удаляет элемент с начала очереди.
# peek (просмотр элемента в начале очереди) - возвращает элемент в начале очереди без его удаления.
# clear - очистка очереди.
# len - получение текущего количества элементов в очереди.
# Реализуйте очередь с помощью python list. В зависимости от выбранного вами начала и конца очереди,
# в виде комментария укажите сложность операций:
#
# enqueue
# dequeue
# peek
# dequeue
# len
# Например,
#
# ...
# def dequeue(self):  # O(...)
#     ...
# При решении нельзя пользоваться готовой структурой данных очередь.
from sort import Queue

q = Queue()
q.queue = [1, 6, 5, 3, 8, 6, 9, 3, 5]
print(q)
# for i in range(5):
#     q.enqueue(i)
# print(q)
# q.bubble_sort()
q.quick_sort(0, len(q.queue) - 1)
print(q)
